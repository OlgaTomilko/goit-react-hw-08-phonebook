{"version":3,"sources":["redux/contacts/contacts-selectors.js","redux/contacts/contacts-operations.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","components/Modal/Modal.js","components/Phonebook/Phonebook.js"],"names":["getContacts","state","contacts","items","getFilter","filter","getLoading","loading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","number","dispatch","contact","actions","axios","post","then","data","catch","error","message","contactId","delete","a","get","useStyles","makeStyles","form","width","height","display","flexDirection","justifyContent","connect","contactsSelectors","onAdd","value","contactsOperations","classes","item","onInputChange","event","target","id","className","onSubmit","e","preventDefault","map","alert","type","onChange","Button","variant","color","size","updateFilter","isLoading","fetchContacts","onDelete","onClose","useEffect","handlerDelete","currentTarget","onClick","modalRoot","document","querySelector","Modal","handleKeyDown","code","props","handleBackdropClick","window","addEventListener","this","removeEventListener","createPortal","children","Component","Phonebook","showModal","toggleModal","setState"],"mappings":"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","file":"static/js/4.86f3a4da.chunk.js","sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getContacts = (state) => state.contacts.items;\r\n\r\nconst getFilter = (state) => state.contacts.filter;\r\n\r\nconst getLoading = (state) => {\r\n  return state.contacts.loading;\r\n};\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n\r\nexport default {\r\n  getContacts,\r\n  getFilter,\r\n  getLoading,\r\n  getVisibleContacts,\r\n};\r\n\r\n// const getVisibleContacts = (state) => {\r\n//   const contacts = getContacts(state);\r\n//   const filter = getFilter(state);\r\n//   const normalizedFilter = filter.toLowerCase();\r\n//   return contacts.filter(({ name }) =>\r\n//     name.toLowerCase().includes(normalizedFilter)\r\n//   );\r\n// };\r\n","import axios from \"axios\";\r\nimport * as actions from \"./contacts-actions\";\r\n\r\nconst fetchContacts = () => async (dispatch) => {\r\n  dispatch(actions.fetchContactRequest());\r\n  try {\r\n    const { data } = await axios.get(\"/contacts\");\r\n    dispatch(actions.fetchContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(actions.fetchContactError(error.message));\r\n  }\r\n};\r\n\r\nconst addContact = ({ name, number }) => (dispatch) => {\r\n  const contact = { name, number };\r\n\r\n  dispatch(actions.addContactRequest());\r\n  axios\r\n    .post(\"/contacts\", contact)\r\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\r\n    .catch((error) => dispatch(actions.addContactError(error.message)));\r\n};\r\n\r\nconst deleteContact = (contactId) => (dispatch) => {\r\n  dispatch(actions.deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(actions.deleteContactSuccess(contactId)))\r\n    .catch((error) => dispatch(actions.deleteContactError(error.message)));\r\n};\r\n\r\nexport default { addContact, deleteContact, fetchContacts };\r\n","import PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { contactsOperations, contactsSelectors } from \"../../redux/contacts\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles({\r\n  form: {\r\n    width: 275,\r\n    height: 150,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n});\r\n\r\nconst ContactForm = ({ contacts, onAdd }) => {\r\n  const classes = useStyles();\r\n  let item = { name: \"\", number: \"\" };\r\n\r\n  const onInputChange = (event) => {\r\n    item = { ...item, [event.target.id]: event.target.value };\r\n  };\r\n\r\n  const isAlreadyContact = () => {\r\n    const Names = contacts.map((contact) => contact.name);\r\n    return Names.includes(item.name);\r\n  };\r\n\r\n  const onSave = (e) => {\r\n    e.preventDefault();\r\n    isAlreadyContact()\r\n      ? alert(`${item.name} is already in contacts.`)\r\n      : onAdd(item);\r\n  };\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={onSave}>\r\n      <label>Name</label>\r\n      <input type=\"text\" onChange={onInputChange} id=\"name\"></input>\r\n      <label>Number</label>\r\n      <input type=\"text\" onChange={onInputChange} id=\"number\"></input>\r\n      <Button variant=\"contained\" color=\"primary\" size=\"small\" type=\"submit\">\r\n        Add contact\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: contactsSelectors.getContacts(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchProps = (dispatch) => {\r\n  return {\r\n    onAdd: (value) => dispatch(contactsOperations.addContact(value)),\r\n  };\r\n};\r\n\r\nContactForm.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n  onAdd: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchProps)(ContactForm);\r\n","import PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateFilter } from \"../../redux/contacts\";\r\n\r\nconst Filter = ({ updateFilter }) => {\r\n  return (\r\n    <div>\r\n      <p>Find contacts by name</p>\r\n      <input type=\"text\" onChange={updateFilter} id=\"find\"></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchProps = (dispatch) => {\r\n  return {\r\n    updateFilter: (event) => dispatch(updateFilter(event.target.value)),\r\n  };\r\n};\r\n\r\nFilter.propTypes = {\r\n  updateFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, mapDispatchProps)(Filter);\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { contactsOperations, contactsSelectors } from \"../../redux/contacts\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst ContactList = ({\r\n  // filter,\r\n  contacts,\r\n  isLoading,\r\n  onDelete,\r\n  onClose,\r\n  fetchContacts,\r\n}) => {\r\n  useEffect(() => fetchContacts(), []);\r\n\r\n  // const onFilterContacts = () => {\r\n  //   const filterContacts = contacts.filter((contact) =>\r\n  //     contact.name.toLowerCase().includes(filter.toLowerCase())\r\n  //   );\r\n  //   return filterContacts;\r\n  // };\r\n\r\n  const handlerDelete = (event) => {\r\n    onDelete(event.currentTarget.id);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <p>Loading...</p>}\r\n      <ul>\r\n        {\r\n          // (filter ? onFilterContacts() : contacts)\r\n          contacts.map(({ id, name, number }) => (\r\n            <li key={id}>\r\n              {name}: {number}\r\n              <Button\r\n                color=\"secondary\"\r\n                type=\"button\"\r\n                id={id}\r\n                onClick={handlerDelete}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </li>\r\n          ))\r\n        }\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: contactsSelectors.getVisibleContacts(state),\r\n    filter: contactsSelectors.getFilter(state),\r\n    isLoading: contactsSelectors.getLoading(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchProps = (dispatch) => ({\r\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\r\n  onDelete: (id) => dispatch(contactsOperations.deleteContact(id)),\r\n});\r\n\r\nContactList.propTypes = {\r\n  // filter: PropTypes.string,\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n  onDelete: PropTypes.func.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchProps)(ContactList);\r\n","import React, { Component } from \"react\";\r\n// import React, { useEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport \"./Modal.css\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\n// ========== HOOK =============\r\n\r\n// const Modal = ({ onClose, children }) => {\r\n//   //   componentDidMount\r\n//   useEffect(() => {\r\n//     window.addEventListener(\"keydown\", handleKeyDown);\r\n//     //   componentWillUnmount\r\n//     return () => {\r\n//       window.removeEventListener(\"keydown\", handleKeyDown);\r\n//     };\r\n//   }, []);\r\n\r\n//   const handleKeyDown = (event) => {\r\n//     if (event.code === \"Escape\") {\r\n//       onClose();\r\n//     }\r\n//   };\r\n\r\n//   const handleBackdropClick = (event) => {\r\n//     if (event.target === event.currentTarget) {\r\n//       onClose();\r\n//     }\r\n//   };\r\n\r\n//   return createPortal(\r\n//     <div className=\"Modal__backdrop\" onClick={handleBackdropClick}>\r\n//       <div className=\"Modal__content\">{children}</div>\r\n//     </div>,\r\n//     modalRoot\r\n//   );\r\n// };\r\n\r\n// export default Modal;\r\n\r\n// =========== CLASS =============\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = (event) => {\r\n    if (event.code === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = (event) => {\r\n    if (event.target === event.currentTarget) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Modal__backdrop\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal__content\">{this.props.children}</div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\r\nimport ContactForm from \"../ContactForm/ContactForm\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport ContactList from \"../ContactList/ContactList\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default class Phonebook extends Component {\r\n  state = {\r\n    showModal: false,\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.showModal && (\r\n          <Modal onClose={this.toggleModal}>\r\n            <h1>Контакт удален</h1>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"small\"\r\n              type=\"button\"\r\n              onClick={this.toggleModal}\r\n            >\r\n              Закрыть\r\n            </Button>\r\n          </Modal>\r\n        )}\r\n\r\n        <h1>Phonebook</h1>\r\n        <ContactForm />\r\n        <h2>Contacts</h2>\r\n        <Filter />\r\n        <ContactList onClose={this.toggleModal} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}